# данная реализация имеет сложность O(n)
# данная реализация является улучшенной реализацией решета Эратосфена
# алгоритм основан на том что у каждого числа либо есть простой делитель
# либо число само является простым
# и на каждой иттерации мы проверяем для составных чисел
# сколько потомков они имеют с уже имеющимся набором простых чисел


def get_least_primes_linear(n):
    lp = [0] * (n + 1)
    primes = []
    for i in range(2, n + 1):
        if lp[i] == 0:
            lp[i] = i
            primes.append(i)
        for p in primes:
            x = p * i
            if (p > lp[i]) or (x > n):
                break
            lp[x] = p
    return primes, lp

print(get_least_primes_linear(10))